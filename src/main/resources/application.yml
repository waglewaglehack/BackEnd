spring:
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    defer-datasource-initialization: true
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  datasource:
    driver-class-name: org.h2.Driver
    url: "jdbc:h2:mem:spring_assignments;MODE=MYSQL;"
    username: sa
    password:
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5
      pool-name: H2_DB
  sql:
    init:
      platform: h2

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 969206815979-t7v5rqkmd3qb13oqd7hhuftghmrskumi.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope: # 사용자에게 리소스 서버에서 획득할 수 있는 권한의 범위를 의미
              - email
              - profile

logging:
  level:
    org:
      hibernate:
        SQL: debug

jwt:
  secretKey: base64로 인코딩된 암호 키, HS512를 사용할 것이기 때문에, 512비트(64바이트) 이상이 되어야 합니다. 영숫자 조합으로 아무렇게나 길게 써주세요!

  access:
    expiration: 3600000 # 1시간(60분) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    header: Authorization

  refresh:
    expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
    header: Authorization-refresh

